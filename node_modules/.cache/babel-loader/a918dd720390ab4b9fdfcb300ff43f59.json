{"ast":null,"code":"var _jsxFileName = \"/Users/kellieyau/streaks/src/components/Habit.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport EditHabit from \"./EditHabit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Habit(_ref) {\n  _s();\n\n  let {\n    habit,\n    onEdit,\n    onDelete,\n    isEditing,\n    onComplete,\n    onReset\n  } = _ref;\n  const [showEdit, setShowEdit] = useState(isEditing);\n\n  const toggleEdit = () => {\n    setShowEdit(!showEdit);\n  }; // form api access field -> to showEdit or not showEdit\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habitBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habit\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"habitText\",\n        children: habit.text ? habit.text : \"Change me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"streak\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [habit.streak, habit.targetStreak ? `/${habit.targetStreak} ` : \" \", \"days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onComplete(habit.id),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onReset(habit.id),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleEdit,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onDelete(habit.id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), showEdit && /*#__PURE__*/_jsxDEV(EditHabit, {\n      habit: habit,\n      onEdit: onEdit,\n      onDelete: onDelete,\n      toggleEdit: toggleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Habit, \"sjC7grKkj3N/pn4JzYGckJRbm9k=\");\n\n_c = Habit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Habit\");","map":{"version":3,"sources":["/Users/kellieyau/streaks/src/components/Habit.js"],"names":["useState","Button","EditIcon","CheckIcon","EditHabit","DeleteIcon","Habit","habit","onEdit","onDelete","isEditing","onComplete","onReset","showEdit","setShowEdit","toggleEdit","text","streak","targetStreak","id","color"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,eAAe,SAASC,KAAT,OAA4E;AAAA;;AAAA,MAA7D;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,SAA3B;AAAsCC,IAAAA,UAAtC;AAAkDC,IAAAA;AAAlD,GAA6D;AACzF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACU,SAAD,CAAxC;;AACA,QAAMK,UAAU,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD,CAFyF,CAKzF;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBAEGN,KAAK,CAACS,IAAN,GAAaT,KAAK,CAACS,IAAnB,GAA0B;AAF7B;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA,gCACE;AAAA,qBACGT,KAAK,CAACU,MADT,EAGGV,KAAK,CAACW,YAAN,GAAsB,IAAGX,KAAK,CAACW,YAAa,GAA5C,GAAiD,GAHpD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMP,UAAU,CAACJ,KAAK,CAACY,EAAP,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMP,OAAO,CAACL,KAAK,CAACY,EAAP,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAiBE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEJ,UAAjB;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAqBE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMN,QAAQ,CAACF,KAAK,CAACY,EAAP,CAA/B;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAmCGP,QAAQ,iBACP,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEN,KAAlB;AAAyB,MAAA,MAAM,EAAEC,MAAjC;AAAyC,MAAA,QAAQ,EAAEC,QAAnD;AAA6D,MAAA,UAAU,EAAEM;AAAzE;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAhDuBT,K;;KAAAA,K","sourcesContent":["import { useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport EditHabit from \"./EditHabit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nexport default function Habit({ habit, onEdit, onDelete, isEditing, onComplete, onReset }) {\n  const [showEdit, setShowEdit] = useState(isEditing);\n  const toggleEdit = () => {\n    setShowEdit(!showEdit);\n  };\n  // form api access field -> to showEdit or not showEdit\n  \n  return (\n    <div className=\"habitBox\">\n      <div className=\"habit\">\n        <h3 className=\"habitText\">\n          {/* If text is empty: set text to 'Change me!': ooo text is sentient */}\n          {habit.text ? habit.text : \"Change me!\"}\n        </h3>\n\n        <h3 className=\"streak\">\n          <div>\n            {habit.streak}\n            {/* Ternary operator: only display targetStreak if it exists (non-zero) */}\n            {habit.targetStreak ? `/${habit.targetStreak} ` : \" \"}\n            days\n          </div>\n\n          <Button onClick={() => onComplete(habit.id)}> \n            Complete\n            {/* <CheckIcon style={{ color: 'green' }} /> */}\n          </Button>\n\n          <Button onClick={() => onReset(habit.id)}>\n            Reset\n          </Button>\n\n          <Button onClick={toggleEdit}>\n            <EditIcon />\n          </Button>\n\n          <Button onClick={() => onDelete(habit.id)}>\n            <DeleteIcon style={{ color: \"red\" }} />\n          </Button>\n        </h3>\n      </div>\n\n      {/* Only show the EditHabit component if toggled on */}\n      {showEdit && (\n        <EditHabit habit={habit} onEdit={onEdit} onDelete={onDelete} toggleEdit={toggleEdit}/>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}